// script 위치 참고
https://shape-coding.tistory.com/entry/JavaScript-Script-%ED%83%9C%EA%B7%B8%EC%9D%98-%EC%9C%84%EC%B9%98%EB%8A%94-%EC%96%B4%EB%94%94%EA%B0%80-%EC%A2%8B%EC%9D%84%EA%B9%8C

console.log(); 개발자도구 출력
alert(); 사용자에게 출력
prompt(); 사용자에게 입력 받음


// 비교 연산자 (boolean)

== : 동등 // 값이 같다 (타입 X)
!= : 부등 // 값이 다르다 (타입 X)
=== : 일치 // 값이 같다 (타입 O)

> | >= | < | <= : 대소비교

// 논리 연산자 (boolean)

&& : AND
|| : OR
! : NOT

// 기타 연산자

? : 삼항 연산자 // A ? B : C // A가 참이면 return B 거짓이면 return C
delete, typeof... : 단항 연산자
& , | , ^ , ~ , << , >> , >>> : 비트 연산자

// 조건문

if ( 조건식 ) { 
        실행 코드 
    } else if {
        실행코드
    } else {
        실행코드 
    }
    
switch ( 표현식 ) {
    case 값1 : 
        실행코드 
        break; 
    case 값2 : 
        실행코드 
        break; 
    default: 
        실행코드 
}

// 반복문

for (초기식; 조건문; 증감식) { 실행 코드 }
while (조건문;) { 실행 코드 }


// 스코프

전역 스코프 : 모든 스코프에서 사용 가능
블록 스코프 : var로 선언 시 모든 스코프에서 사용 가능, let으로 선언 시 선언된 블록 내에서만 사용 가능
함수 스코프 : 해당 함수 내에서만 사용 가능

// DOM (Document Object Model)

// 자바스크립트와 같은 프로그래밍 언어에서 HTML 문서의 정보를 다룰 수 있게 해주는 프로그래밍 인터페이스
// HTML CODE - 웹브라우저에 의해 DOM으로 변환 - > DOM < - DOM 인터페이스로 자바스크립트에서 접근 - > Javascript
// html 태그로 작성된 요소들은 DOM Object로 표현, 계층적인 구조를 가짐(html : document(root), else : element)
// 모든 요소들은 속성, 이벤트, 프로퍼티의 구성을 가짐

document.함수() 를 통해 요소 불러오기 가능

document.createElement(tagName) : 새로운 DOM 노드 객체 생성
(element Name).appendChild(DOM 노드 객체) : 특정 element 하위에 DOM 객체 삽입
element.style.XX = XX 를 통해 스타일 수정 가능
이 외 여러 명령어들로 내용 수정 가능


// Event
// click, mousemove 등 여러 이벤트가 있음

element.addEventListener('click', function(){
    // 해당 요소가 클릭 되었을 때 실행
});

콜백함수 : 이벤트리스너와 같이 특정 트리거가 발생했을 때 완료시점에 호출받기 위한 함수(매개변수로 전달하는 함수)

// 클로져(Closure)
// 내부 함수가 실행시점을 포함해서 외부함수의 맥락에 접근할 수 있는 것
// 어떤 함수를 정의할 떄 외부 스코프에 정의된 변수들까지 ***캡쳐***해서 함수가 실행될 때 사용할 수 있도록 함
// 정보은닉 & 캡슐화

// var1이 격리(캡쳐)되어 각 함수호출별로 따로 사용
function createClosure(var1) {
    return function(){
        var1++;
        console.log(var1);
    }
}

// AJAX(Asynchronous JavaScript And Xml)
// 자바스크립트에 내장된 XMLHttpRequest 객체를 이용해 페이지를 새로고침하지 않고 필요한 데이터를 비동기적으로 불러오는 기법

1. 화면 표시 완료 >> 2. 이벤트 >> 3. AJAX 데이터 불러옴 >> 4. DOM API로 화면에 추가